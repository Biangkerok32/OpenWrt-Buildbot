#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi 4 OpenWrt

on:
  repository_dispatch:
    types: [project, rpi4]
  workflow_dispatch:
#  schedule:
#    - cron: 0 18 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/project-openwrt/openwrt
  REPO_BRANCH: openwrt-18.06-k5.4
  CONFIG_FILE: config/bcm27xx/rpi4-openwrt-target.config
  DIY_SH: scripts/project-openwrt.sh
  UPLOAD_RCLONE: true
  UPLOAD_WETRANSFER: true
  UPLOAD_COWTRANSFER: true

jobs:
  Build:
    runs-on: project-rpi4

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone Source Code
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update Feeds
      id: update
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
        ./scripts/feeds update -a

    - name: Install Feeds
      run: |
        cd $OPENWRTROOT
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files $OPENWRTROOT/files
        cp $CONFIG_FILE $OPENWRTROOT/.config
        cat config/firmware-extra.config >> $OPENWRTROOT/.config
        chmod +x scripts/*.sh
        cd $OPENWRTROOT
        ../$DIY_SH
        ../scripts/preset-clash-core.sh armv8
        ../scripts/preset-terminal-tools.sh

    - name: Download Firmware Packages
      id: package
      run: |
        cd $OPENWRTROOT
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Firmware Packages
      id: compile
      run: |
        cd $OPENWRTROOT
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS="y m n" || make package/compile -j1 V=s IGNORE_ERRORS="y m n"
        make package/index
        cd $OPENWRTROOT/bin/packages/*
        PLATFORM=$(basename `pwd`)
        echo "PLATFORM=$PLATFORM" >> $GITHUB_ENV
        cd $OPENWRTROOT/bin/targets/*
        TARGET=$(basename `pwd`)
        echo "TARGET=$TARGET" >> $GITHUB_ENV
        cd *
        SUBTARGET=$(basename `pwd`)
        echo "SUBTARGET=$SUBTARGET" >> $GITHUB_ENV
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=COMPILE_STATUS::success"

    - name: Generate Firmware
      if: steps.compile.outputs.COMPILE_STATUS == 'success'
      id: generate
      run: |
        cd data/opkg
        sed -i "s/subtarget/$SUBTARGET/g" distfeeds.conf
        sed -i "s/target\//$TARGET\//g" distfeeds.conf
        sed -i "s/platform/$PLATFORM/g" distfeeds.conf
        sed -i "s/date/$(date +"%Y-%m-%d")/g" distfeeds.conf
        cd $OPENWRTROOT
        mkdir -p files/etc/opkg
        cp ../data/opkg/distfeeds.conf files/etc/opkg/distfeeds.conf
        echo "dtparam=i2c_arm=on,audio=on" >> target/linux/bcm27xx/image/config.txt
        mkdir -p files/etc/uci-defaults/
        cp ../scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
        chmod +x files/etc/uci-defaults/99-init-settings
        mkdir -p files/bin
        cp ../scripts/ipv6-helper.sh files/bin/ipv6-helper
        chmod +x files/bin/ipv6-helper
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        make checksum
        echo "::set-output name=GENERATE_STATUS::success"

    - name: Download Extra Packages
      if: steps.generate.outputs.GENERATE_STATUS == 'success'
      run: |
        cd $OPENWRTROOT
        rm -f .config*
        make clean
        make clean
        cp ../$CONFIG_FILE ./.config
        cat ../config/packages-extra.config >> $OPENWRTROOT/.config
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Extra Packages
      if: steps.generate.outputs.GENERATE_STATUS == 'success'
      run: |
        cd $OPENWRTROOT
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make diffconfig
        make package/compile -j$(nproc) IGNORE_ERRORS="y m n" || make package/compile -j1 V=s IGNORE_ERRORS="y m n"
        make package/index
        
    - name: Rclone Upload
      env:
        RCLONE_PACKAGE: ${{ secrets.RCLONE_PACKAGE }}
        RCLONE_FIRMWARE: ${{ secrets.RCLONE_FIRMWARE }}
      if: steps.generate.outputs.GENERATE_STATUS == 'success' && env.UPLOAD_RCLONE == 'true' && env.RCLONE_PACKAGE != ''
      run: |
        cd $OPENWRTROOT
        rclone copy bin $RCLONE_PACKAGE:$(date +"%Y-%m-%d")
        rclone purge $RCLONE_PACKAGE:latest/packages/$PLATFORM > /dev/null 2>&1 || true
        rclone purge $RCLONE_PACKAGE:latest/targets/$TARGET/$SUBTARGET > /dev/null 2>&1 || true
        rclone copy $RCLONE_PACKAGE:$(date +"%Y-%m-%d")/packages/$PLATFORM $RCLONE_PACKAGE:latest/packages/$PLATFORM
        rclone copy $RCLONE_PACKAGE:$(date +"%Y-%m-%d")/targets/$TARGET/$SUBTARGET $RCLONE_PACKAGE:latest/targets/$TARGET/$SUBTARGET
        echo "::warning file=Download-Link::https://openwrt.cc/snapshots/latest/targets/$TARGET/$SUBTARGET"

    - name: Organize Files
      id: organize
      if: steps.generate.outputs.GENERATE_STATUS == 'success'
      run: |
        cd $OPENWRTROOT/bin/targets/$TARGET/$SUBTARGET
        rm -rf packages
        df -hT $PWD
        echo "::set-output name=ORGANIZE_STATUS::success"

    - name: Upload Firmware To CowTransfer
      if: steps.organize.outputs.ORGANIZE_STATUS == 'success' && env.UPLOAD_COWTRANSFER == 'true'
      run: |
        cd $OPENWRTROOT
        transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=Firmware-Cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload Firmware To WeTransfer
      if: steps.organize.outputs.ORGANIZE_STATUS == 'success' && env.UPLOAD_WETRANSFER == 'true'
      run: |
        cd $OPENWRTROOT
        transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=Firmware-Wetransfer.com::$(cat wetransfer.log | grep https)"
