#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Update OpenWrt.cc DL Mirror

on:
  workflow_dispatch:
  schedule:
    - cron: 0 18 * * *
#  watch:
#    types: started

env:
  WEBROOT: /data/dnmp/www/openwrt.cc

jobs:
  Download:
    if: always()
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        REPO: [openwrt/openwrt/master, openwrt/openwrt/openwrt-18.06, openwrt/openwrt/openwrt-19.07, openwrt/openwrt/openwrt-21.02, openwrt/openwrt/lede-17.01, coolsnowwolf/lede/master, immortalwrt/immortalwrt/openwrt-18.06, immortalwrt/immortalwrt/master, immortalwrt/immortalwrt/openwrt-18.06-dev, immortalwrt/immortalwrt/openwrt-18.06-k5.4, immortalwrt/immortalwrt/openwrt-21.02, lienol/openwrt/main, lienol/openwrt/19.07]

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization Environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

      - name: Clone Source Code
        id: clone
        env:
          REPO: ${{ matrix.REPO }}
        run: |
          df -hT $PWD
          export REPO_USER="$(echo $REPO | awk -F '/' '{print $1}')"
          echo "REPO_USER=$REPO_USER" >> $GITHUB_ENV
          export REPO_NAME="$(echo $REPO | awk -F '/' '{print $2}')"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          export REPO_BRANCH="$(echo $REPO | awk -F '/' '{print $3}')"
          echo "REPO_BRANCH=$REPO_BRANCH" >> $GITHUB_ENV
          git clone --depth=1 https://github.com/$REPO_USER/$REPO_NAME -b $REPO_BRANCH openwrt

      - name: Install Feeds
        id: feeds
        run: |
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV
          ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Download All Packages
        id: download-dl
        run: |
          cd $OPENWRTROOT
          echo "CONFIG_ALL=y" >> .config
          make defconfig
          make download -j32 IGNORE_ERRORS=1
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          mv dl $REPO_USER-$REPO_NAME-$REPO_BRANCH
          zip -qr $REPO_USER-$REPO_NAME-$REPO_BRANCH.zip $REPO_USER-$REPO_NAME-$REPO_BRANCH
          echo "::set-output name=DOWNLOAD_STATUS::success"

      - name: Upload DL Folder
        id: upload-artifacts
        if: steps.download-dl.outputs.DOWNLOAD_STATUS == 'success'
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.REPO_USER }}-${{ env.REPO_NAME }}-${{ env.REPO_BRANCH }}
          path: openwrt/${{ env.REPO_USER }}-${{ env.REPO_NAME }}-${{ env.REPO_BRANCH }}.zip

  Merge-Files:
    needs: [Download]
    if: always()
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download DL
        id: download-artifacts
        uses: actions/download-artifact@v2
        with:
          path: openwrt/dl

      - name: Install Rdfind
        id: install-rdfind
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install rdfind
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          cd openwrt
          echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

      - name: Organize Files
        id: organize
        run: |
          cd $OPENWRTROOT/dl
          find . -name "*.zip" -exec unzip {} \;
          find . -name "*.zip" -exec rm -f {} \;
          mkdir -p openwrt/openwrt immortalwrt/immortalwrt coolsnowwolf/lede lienol/openwrt
          mv openwrt-* openwrt/openwrt
          mv immortalwrt-* immortalwrt/immortalwrt
          mv coolsnowwolf-* coolsnowwolf/lede
          mv lienol-* lienol/openwrt
          for REPOPATH in openwrt/openwrt immortalwrt/immortalwrt coolsnowwolf/lede lienol/openwrt
          do
              cd $OPENWRTROOT/dl/$REPOPATH
              ls | xargs -i rsync -axvu {}/ .
              export REPO_USER=$(echo $REPOPATH | awk -F "/" '{print $1}')
              rm -rf $REPO_USER-*
          done
          sudo rdfind -makehardlinks true $OPENWRTROOT/dl

      - name: Deploy Files To Server
        id: deploy
        env:
          HOST: "${{ secrets.REMOTE_USER }}@${{ secrets.HOSTHATCH_IP }}"
          SOURCE_DL: "openwrt/dl/"
          DEST_DL: "${{ env.WEBROOT }}/dl/"
          REMOTE_PRIVATEKEY: "${{secrets.HOSTHATCH_PRIVATEKEY}}"
        run: |
          mkdir -p ~/.ssh/
          install -m 600 /dev/null ~/.ssh/id_rsa
          echo "${{secrets.HOSTHATCH_PRIVATEKEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -q -t -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $HOST \
          bash -c "'mkdir -p $DEST_DL'"
          rsync -chavHP --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" $SOURCE_DL $HOST:$DEST_DL